% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replicate_data.R
\name{replicate_real_phenos}
\alias{replicate_real_phenos}
\title{Generate phenotypes emulating real phenotypic data at hand.}
\usage{
replicate_real_phenos(
  n,
  real_phenos,
  input_family = "gaussian",
  bl_lgth = NULL,
  d = NULL,
  n_cpus = 1,
  user_seed = NULL
)
}
\arguments{
\item{n}{Number of observations.}

\item{real_phenos}{Matrix of real phenotypes (rows observations, columns
phenotypic variables), without missing values.}

\item{input_family}{Phenotype distribution assumption for the phenotypes
provided in real_phenos. Must be either "\code{gaussian}" or
"\code{binomial}" for binary phenotypes.}

\item{bl_lgth}{Number of variables per block for reproducing the dependence
structure of real phenotypes. Must be between 2 and d. Must be small enough
(e.g. 1000) for tractability reasons. Default is \code{NULL} for a single
block.}

\item{d}{Number of phenotypes. If \code{NULL}, the total number of phenotypes
available in the real_phenos matrix is used (default).}

\item{n_cpus}{Number of CPUs used when simulating phenotypes by blocks. Set
to 1 for serial execution.}

\item{user_seed}{Seed set for reproducibility. Default is \code{NULL}, no
seed set.}
}
\value{
An object of class "\code{sim_phenos}".
 \item{phenos}{Matrix containing the generated phenotypic data.}
 \item{var_err}{Vector containing the sample phenotypic variances.}
 \item{ind_bl}{List of length given by the number of blocks, containing the
               indices of the phenotypes in each block. Is \code{NULL} if
               \code{cor_type} is \code{NULL}.}
}
\description{
This function simulates phenotypes from real phenotypic data based on their
sample correlation structure. If binary data are provided, will simulate
latent Gaussian data from them (binary data can then be obtained using the
\code{\link{generate_dependence}} function).
}
\examples{
user_seed <- 123; set.seed(user_seed)
n <- 500; d <- 1000
cor_type <- "equicorrelated"; vec_rho <- runif(100, min = 0.25, max = 0.95)

# Provided phenotypes assumed to be normally distributed
var_err <- runif(d, min = 0.1, max = 0.4)
list_fake_real_phenos <- generate_phenos(n, d, var_err, cor_type = cor_type,
                                         vec_rho = vec_rho, n_cpus = 2,
                                         user_seed = user_seed)
list_phenos <- replicate_real_phenos(n, list_fake_real_phenos$phenos,
                                     input_family = "gaussian", bl_lgth = 100,
                                     n_cpus = 2, user_seed = user_seed)

}
\seealso{
\code{\link{convert_snps}}, \code{\link{generate_snps}},
  \code{\link{replicate_real_snps}}, \code{\link{convert_phenos}},
  \code{\link{generate_phenos}}, \code{\link{generate_dependence}}
}
